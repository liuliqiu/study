#!/usr/bin/env python
#-*- coding:utf-8 -*-
"""
    An enormous factorial

    For any prime p the number N(p,q) is defined by N(p,q) = ∑(n=0 to q) Tn*(p^n)
    with Tn generated by the following random number generator:

    S0 = 290797
    Sn+1 = Sn^2 mod 50515093
    Tn = Sn mod 

    Let Nfac(p,q) be the factorial of N(p,q).
    Let NF(p,q) be the number of factors p in Nfac(p,q).

    You are given that NF(3,10000) mod 3^20=624955285.

    Find NF(61,10^7) mod 61^10
"""

"""
    the number of factors p of the factorial of n
    = the sum of (the factors p of number from 1 to n)
    = n / p + the sum of (the factors p of number from 1 to n / p)

    write n as base-p
    n = ∑(i = 0 to k)ai * (p ** i)
    the number of factors p of the factorial of n 
    F(n)
    = ∑(i = 0 to k)(∑(j = 0 to i - 1)ai * (p ** j))
    = ∑(i = 0 to k)(ai * (∑(j = 0 to i - 1)p ** j))
    = ∑(i = 0 to k)(ai * (p ** i - 1) / (p - 1))

    F(n) % (p ** m)
    = F(min(m, n))

"""


def S(n):
    s = 290797
    for i in xrange(n):
        yield s
        s = (s * s) % 50515093

def NF(p, q, m):
    k = 0
    l = [(p ** i - 1) / (p - 1) for i in range(m + 1)]
    for n, s in enumerate(S(q + 1)):
        t = s % p
        k += t * l[min(n, m)]
    return k % (p ** m)


def main():
    #print NF(3, 10000, 20) # 624955285
    print NF(61, 10 ** 7, 10) # 605857431263981935      4.93s


if __name__ == "__main__":
    main()
